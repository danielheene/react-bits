{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["Headline","HeadlineAccent","props","theme","colors","primary","CenteredContainer","Button","shouldForwardProp","prop","isPropValid","white","black","lightGray","breakpoint","small","primaryDark","mediumGray","iconRight","iconLeft","ButtonBar","ButtonLink","withComponent","Link","IndexPage","data","to","target","href","site","siteMetadata","repository"],"mappings":"4SAWA,MAAMA,EAAW,kBAAH,oBAAG,CAAH,wEAMRC,EAAiB,oBAAH,oBAAG,CAAH,SACTC,GAASA,EAAMC,MAAMC,OAAOC,QADnB,KAIPC,EAAoB,mBAAH,oBAAG,CAAH,kHAQxBC,EAAS,YAAO,IAAP,CACbC,kBAAmBC,GAAQC,YAAYD,GAD1B,qBAAH,0FAaDP,GACPA,EAAMG,QAAUH,EAAMC,MAAMC,OAAOO,MAAQT,EAAMC,MAAMC,OAAOQ,MAdtD,qBAeUV,GAClBA,EAAMG,QAAUH,EAAMC,MAAMC,OAAOC,QAAUH,EAAMC,MAAMC,OAAOS,UAhBxD,qRAiCWX,GAASA,EAAMC,MAAMW,WAAWC,MAjC3C,6GA4CYb,GAClBA,EAAMG,QACFH,EAAMC,MAAMC,OAAOY,YACnBd,EAAMC,MAAMC,OAAOa,WA/CjB,mCAoDOf,GAAUA,EAAMgB,UAAY,QAAU,EApD7C,iBAqDQhB,GAAUA,EAAMiB,SAAW,QAAU,EArD7C,MAyDNC,EAAY,mBAAH,oBAAG,CAAH,mHAOQlB,GAASA,EAAMC,MAAMW,WAAWC,MAPxC,wCAaTM,EAAad,EAAOe,cAAcC,IAArB,sBAEJ,SAASC,IACtB,MAAMC,EAAO,OAUb,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAACnB,EAAD,KACE,YAACN,EAAD,uBACkB,IAChB,YAACC,EAAD,qCAFF,qBAKA,YAACmB,EAAD,KACE,YAACC,EAAD,CAAYK,GAAG,QAAQrB,SAAO,EAACa,WAAS,GAAxC,cAEE,YAAC,IAAD,OAEF,YAACX,EAAD,CACEoB,OAAO,SACPC,KAAMH,EAAKI,KAAKC,aAAaC,WAC7BZ,UAAQ,GAER,YAAC,IAAD,MALF,gB","file":"component---src-pages-index-tsx-aef2cc00bb86a3e4c8b3.js","sourcesContent":["import React from 'react';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport { Layout } from '../components/Layout';\nimport styled from '@emotion/styled';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { CenteredWrap } from '../components/Wrapper';\nimport {\n  GoMarkGithub as GithubIcon,\n  GoChevronRight as ChevronIcon,\n} from 'react-icons/go';\n\nconst Headline = styled.h1`\n  width: 100%;\n  font-weight: 600;\n  text-align: center;\n`;\n\nconst HeadlineAccent = styled.span<EmotionDefaults>`\n  color: ${props => props.theme.colors.primary};\n`;\n\nexport const CenteredContainer = styled.div<EmotionDefaults>`\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n  max-width: 100%;\n  margin: 0 1rem 2rem 1rem;\n`;\n\nconst Button = styled('a', {\n  shouldForwardProp: prop => isPropValid(prop),\n})<\n  EmotionDefaults & {\n    primary?: boolean;\n    iconLeft?: boolean;\n    iconRight?: boolean;\n  }\n>`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  white-space: nowrap;\n  color: ${props =>\n    props.primary ? props.theme.colors.white : props.theme.colors.black};\n  background-color: ${props =>\n    props.primary ? props.theme.colors.primary : props.theme.colors.lightGray};\n  font-size: 1.4rem;\n  letter-spacing: -0.05em;\n  font-weight: 500;\n  line-height: 1.2;\n  border-radius: 5px;\n  padding: 0.5em 1.2em;\n  border: none;\n  cursor: pointer;\n  width: 100%;\n  text-decoration: none;\n  transition: background-color 150ms ease-in-out;\n\n  &:not(:last-child) {\n    margin-bottom: 0.5em;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoint.small}) {\n    margin: 0 auto;\n    width: auto;\n\n    &:not(:last-child) {\n      margin-right: 2em;\n      margin-bottom: 0;\n    }\n  }\n\n  &:hover {\n    background-color: ${props =>\n      props.primary\n        ? props.theme.colors.primaryDark\n        : props.theme.colors.mediumGray};\n  }\n\n  svg {\n    line-height: 0;\n    margin-left: ${props => (props.iconRight ? '0.3em' : 0)};\n    margin-right: ${props => (props.iconLeft ? '0.3em' : 0)};\n  }\n`;\n\nconst ButtonBar = styled.div<EmotionDefaults>`\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem 0;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: ${props => props.theme.breakpoint.small}) {\n    margin: 0 auto;\n    flex-direction: row;\n  }\n`;\n\nconst ButtonLink = Button.withComponent(Link);\n\nexport default function IndexPage() {\n  const data = useStaticQuery(graphql`\n    query IndexQuery {\n      site {\n        siteMetadata {\n          repository\n        }\n      }\n    }\n  `);\n\n  return (\n    <Layout>\n      <CenteredWrap>\n        <CenteredContainer>\n          <Headline>\n            A collection of{' '}\n            <HeadlineAccent>accessible React components,</HeadlineAccent> hooks\n            and tools.\n          </Headline>\n          <ButtonBar>\n            <ButtonLink to=\"/docs\" primary iconRight>\n              Get Started\n              <ChevronIcon />\n            </ButtonLink>\n            <Button\n              target=\"_blank\"\n              href={data.site.siteMetadata.repository}\n              iconLeft\n            >\n              <GithubIcon />\n              GitHub\n            </Button>\n          </ButtonBar>\n        </CenteredContainer>\n      </CenteredWrap>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}